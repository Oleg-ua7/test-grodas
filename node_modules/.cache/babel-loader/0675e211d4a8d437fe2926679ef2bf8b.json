{"ast":null,"code":"// fetch local json\nconst getData = () => {\n  fetch(\"data.json\", {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    mode: \"cors\"\n  }).then(response => {\n    console.log(response);\n    return response.json();\n  }).then(data => {\n    console.log(data);\n  });\n}; // fetch local json using new Request\n\n\nconst init = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  mode: \"cors\"\n};\nlet request = new Request(\"./data.json\", init);\n\nlet getData2 = async () => {\n  const response = await fetch(request);\n  return await response.json();\n}; // fetch local json using XMLHttpRequest\n\n\nlet http = new XMLHttpRequest();\nhttp.open('get', './data.json', true);\nhttp.send();\n\nhttp.onload = function () {\n  if (this.readyState === 4 && this.status === 200) {\n    let products = JSON.parse(this.responseText);\n    console.log(products);\n  }\n};\n\nhttp.onload();","map":{"version":3,"sources":["/home/oleg/Стільниця/Test-Work-Grodas-master/src/api.js"],"names":["getData","fetch","method","headers","mode","then","response","console","log","json","data","init","request","Request","getData2","http","XMLHttpRequest","open","send","onload","readyState","status","products","JSON","parse","responseText"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAC,MAAI;AACdC,EAAAA,KAAK,CAAC,WAAD,EAAc;AACjBC,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,OAAO,EAAG;AACR,sBAAgB,kBADR;AAER,gBAAU;AAFF,KAFO;AAMjBC,IAAAA,IAAI,EAAE;AANW,GAAd,CAAL,CAQEC,IARF,CAQOC,QAAQ,IAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAQ,CAACG,IAAT,EAAP;AAAuB,GAV3B,EAU6BJ,IAV7B,CAUkCK,IAAI,IAAI;AACtCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,GAZH;AAaD,CAdH,C,CAeE;;;AACA,MAAMC,IAAI,GAAG;AACXT,EAAAA,MAAM,EAAE,KADG;AAEXC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFE;AAKXC,EAAAA,IAAI,EAAE;AALK,CAAb;AAMA,IAAIQ,OAAO,GAAG,IAAIC,OAAJ,CAAY,aAAZ,EAA2BF,IAA3B,CAAd;;AACA,IAAIG,QAAQ,GAAG,YAAY;AACzB,QAAMR,QAAQ,GAAG,MAAML,KAAK,CAACW,OAAD,CAA5B;AACA,SAAO,MAAMN,QAAQ,CAACG,IAAT,EAAb;AACD,CAHD,C,CAIA;;;AACA,IAAIM,IAAI,GAAG,IAAIC,cAAJ,EAAX;AACAD,IAAI,CAACE,IAAL,CAAU,KAAV,EAAiB,aAAjB,EAAgC,IAAhC;AACAF,IAAI,CAACG,IAAL;;AACAH,IAAI,CAACI,MAAL,GAAc,YAAU;AACtB,MAAG,KAAKC,UAAL,KAAoB,CAApB,IAAyB,KAAKC,MAAL,KAAgB,GAA5C,EAAgD;AAC9C,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAf;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACD;AACF,CALD;;AAMAP,IAAI,CAACI,MAAL","sourcesContent":["// fetch local json\nconst getData=()=>{\n    fetch(\"data.json\", {\n      method: 'GET',\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       },\n      mode: \"cors\",\n    }\n    ).then(response=> { \n        console.log(response)\n        return response.json()}).then(data => {\n        console.log(data);\n      });\n  }\n  // fetch local json using new Request\n  const init = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    mode: \"cors\",}\n  let request = new Request(\"./data.json\", init);\n  let getData2 = async () => {\n    const response = await fetch(request);\n    return await response.json();\n  }\n  // fetch local json using XMLHttpRequest\n  let http = new XMLHttpRequest();\n  http.open('get', './data.json', true);\n  http.send();\n  http.onload = function(){\n    if(this.readyState === 4 && this.status === 200){\n      let products = JSON.parse(this.responseText);\n      console.log(products)\n    }\n  }\n  http.onload();"]},"metadata":{},"sourceType":"module"}